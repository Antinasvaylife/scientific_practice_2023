import gmpy2

# enc - зашифрованная строка
# dep - глубина рекурсии
def inv_nk2n(enc,dep):
	if enc < 128:
		# отрезок строки соответствует ascii символу 
		print(chr(enc))
		return
	# полагаем e = sqrt(2r)
	e, nul = gmpy2.iroot(2 * enc, 2) # функция iroot возвращает ненужный bool вторым аргументом
	# округляем e вниз
	e = int(e)
	while True:
		# аппроксимация j
		j = (2 * enc - (e * (e + 1))) // 2
		if j < 0:
			e = e - 1
			continue
		# вычисление е'
		e1, nul = gmpy2.iroot(2 * enc - 2 * j, 2)
		if e == e1:
			i = e - j
			# проверка равенства (1)
			assert ((i + j) * (i + j + 1)) // 2 + j == enc
			break
		e = e - 1
	# переход на следующий слой
	if i < 128:
		print(chr(i), end = "")
		print(chr(j), end = "")
		return
	elif j < 128:
		inv_nk2n(i, dep + 1)
		print(chr(j), end = "")		
	else:
		inv_nk2n(i, dep + 1)
		inv_nk2n(j, dep + 1)

# условие задачи
enc = 2597749519984520018193538914972744028780767067373210633843441892910830749749277631182596420937027368405416666234869030284255514216592219508067528406889067888675964979055810441575553504341722797908073355991646423732420612775191216409926513346494355434293682149298585
inv_nk2n(enc,0)
print()

